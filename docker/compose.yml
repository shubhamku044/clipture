version: '3.8'

services:
  # PostgreSQL 14 Database
  postgres:
    image: postgres:14-alpine
    container_name: clipture-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: clipture
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256 --auth-local=scram-sha-256'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../init-scripts:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    networks:
      - clipture-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d clipture -U postgres']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Backend API
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: clipture-backend
    restart: unless-stopped
    environment:
      - PORT=8080
      - ENV=production
      - LOG_LEVEL=info
      - LOG_PRETTY=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=clipture
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL_MODE=disable
      - JWT_SECRET=your_production_jwt_secret_here
      - JWT_EXPIRY=24h
      - AUTH_JWT_SECRET=your_production_auth_secret_here
      - AUTH_JWT_EXPIRY_HOURS=72
      - AUTH_PASSWORD_RESET_EXPIRY=24h
      - AUTH_TOKEN_ISSUER=clipture-app
      - API_TIMEOUT=30s
      - API_RATE_LIMIT=100
      - METRICS_ENABLED=true
      - TRACING_ENABLED=true
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - clipture-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend App
  app:
    build:
      context: ../apps/app
      dockerfile: Dockerfile
    container_name: clipture-app
    restart: unless-stopped
    ports:
      - '3000:80'
    depends_on:
      - backend
    networks:
      - clipture-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Landing Page
  landing:
    build:
      context: ../apps/landing
      dockerfile: Dockerfile
    container_name: clipture-landing
    restart: unless-stopped
    ports:
      - '3001:3000'
    networks:
      - clipture-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Redis (for caching, sessions, etc.)
  redis:
    image: redis:7-alpine
    container_name: clipture-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - clipture-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  clipture-network:
    driver: bridge
